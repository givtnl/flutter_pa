// Mocks generated by Mockito 5.0.15 from annotations
// in flutter_app/test/matches_provider_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:openapi/api.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeApiClient_0 extends _i1.Fake implements _i2.ApiClient {}

class _FakeResponse_1 extends _i1.Fake implements _i3.Response {}

class _FakeGetUserOrganisationMatchesListResponse_2 extends _i1.Fake
    implements _i2.GetUserOrganisationMatchesListResponse {}

/// A class which mocks [MatchesApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockMatchesApi extends _i1.Mock implements _i2.MatchesApi {
  MockMatchesApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApiClient get apiClient =>
      (super.noSuchMethod(Invocation.getter(#apiClient),
          returnValue: _FakeApiClient_0()) as _i2.ApiClient);
  @override
  _i4.Future<_i3.Response> getMatchesListWithHttpInfo(
          {String? userId,
          String? nextPageToken,
          int? minimumScore,
          int? limit}) =>
      (super.noSuchMethod(
              Invocation.method(#getMatchesListWithHttpInfo, [], {
                #userId: userId,
                #nextPageToken: nextPageToken,
                #minimumScore: minimumScore,
                #limit: limit
              }),
              returnValue: Future<_i3.Response>.value(_FakeResponse_1()))
          as _i4.Future<_i3.Response>);
  @override
  _i4.Future<_i2.GetUserOrganisationMatchesListResponse> getMatchesList(
          {String? userId,
          String? nextPageToken,
          int? minimumScore,
          int? limit}) =>
      (super.noSuchMethod(
          Invocation.method(#getMatchesList, [], {
            #userId: userId,
            #nextPageToken: nextPageToken,
            #minimumScore: minimumScore,
            #limit: limit
          }),
          returnValue: Future<_i2.GetUserOrganisationMatchesListResponse>.value(
              _FakeGetUserOrganisationMatchesListResponse_2())) as _i4
          .Future<_i2.GetUserOrganisationMatchesListResponse>);
  @override
  String toString() => super.toString();
}
